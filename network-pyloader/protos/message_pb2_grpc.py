# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import message_pb2 as protos_dot_message__pb2


class UploadNumSamplesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.upload_local_samples = channel.unary_unary(
                '/UploadNumSamplesService/upload_local_samples',
                request_serializer=protos_dot_message__pb2.LocalSamplesRequest.SerializeToString,
                response_deserializer=protos_dot_message__pb2.ReceivedReply.FromString,
                )
        self.get_global_samples = channel.unary_unary(
                '/UploadNumSamplesService/get_global_samples',
                request_serializer=protos_dot_message__pb2.GlobalSamplesRequest.SerializeToString,
                response_deserializer=protos_dot_message__pb2.GlobalSamplesReply.FromString,
                )


class UploadNumSamplesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def upload_local_samples(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_global_samples(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UploadNumSamplesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'upload_local_samples': grpc.unary_unary_rpc_method_handler(
                    servicer.upload_local_samples,
                    request_deserializer=protos_dot_message__pb2.LocalSamplesRequest.FromString,
                    response_serializer=protos_dot_message__pb2.ReceivedReply.SerializeToString,
            ),
            'get_global_samples': grpc.unary_unary_rpc_method_handler(
                    servicer.get_global_samples,
                    request_deserializer=protos_dot_message__pb2.GlobalSamplesRequest.FromString,
                    response_serializer=protos_dot_message__pb2.GlobalSamplesReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UploadNumSamplesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UploadNumSamplesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def upload_local_samples(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UploadNumSamplesService/upload_local_samples',
            protos_dot_message__pb2.LocalSamplesRequest.SerializeToString,
            protos_dot_message__pb2.ReceivedReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_global_samples(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UploadNumSamplesService/get_global_samples',
            protos_dot_message__pb2.GlobalSamplesRequest.SerializeToString,
            protos_dot_message__pb2.GlobalSamplesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UploadSamplesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.upload_samples = channel.stream_unary(
                '/UploadSamplesService/upload_samples',
                request_serializer=protos_dot_message__pb2.SendSamplesRequest.SerializeToString,
                response_deserializer=protos_dot_message__pb2.ReceivedReply.FromString,
                )


class UploadSamplesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def upload_samples(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UploadSamplesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'upload_samples': grpc.stream_unary_rpc_method_handler(
                    servicer.upload_samples,
                    request_deserializer=protos_dot_message__pb2.SendSamplesRequest.FromString,
                    response_serializer=protos_dot_message__pb2.ReceivedReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UploadSamplesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UploadSamplesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def upload_samples(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/UploadSamplesService/upload_samples',
            protos_dot_message__pb2.SendSamplesRequest.SerializeToString,
            protos_dot_message__pb2.ReceivedReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
